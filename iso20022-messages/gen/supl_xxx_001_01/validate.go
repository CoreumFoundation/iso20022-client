// Code generated by GoComply XSD2Go for iso20022; DO NOT EDIT.
// Validations for urn:iso:std:iso:20022:tech:xsd:supl.xxx.001.01
package supl_xxx_001_01

import (
	"fmt"

	"github.com/CoreumFoundation/iso20022-client/iso20022-messages/pkg/iso"
	"github.com/moov-io/base"
)

// XSD Element validations

func (v Document) Validate() error {
	var errs base.ErrorList = base.ErrorList{}
	baseName := "Document"
	iso.AddError(&errs, baseName+".CryptoCurrencyAndAmount", v.CryptoCurrencyAndAmount.Validate())
	if errs.Empty() {
		return nil
	}
	return errs
}

// XSD ComplexType validations

func (v CryptoCurrencyAndAmountType) Validate() error {
	var errs base.ErrorList = base.ErrorList{}
	baseName := "CryptoCurrencyAndAmountType"

	iso.AddError(&errs, baseName+".Dti", v.Dti.Validate())

	iso.AddError(&errs, baseName+".Cccy", v.Cccy.Validate())

	if errs.Empty() {
		return nil
	}
	return errs
}

// XSD SimpleType validations

func (v CryptoCurrencyAndAmountSimpleType) Validate() error {
	if err := iso.ValidateTotalDigits(fmt.Sprintf("%v", v), 19); err != nil {
		return err
	}
	return nil
}

func (v DigitalTokenIdentifier) Validate() error {
	if err := iso.ValidatePattern(string(v), `[A-Z0-9]{9,9}`); err != nil {
		return err
	}
	return nil
}

func (v CryptoCurrencyCode) Validate() error {
	if err := iso.ValidatePattern(string(v), `ucore|[a-zA-Z][a-zA-Z0-9/:._]{0,50}-[a-z02-9]+1[qpzry9x8gf2tvdw0s3jn54khce6mua7l]+|ibc/[A-Z0-9]{64,64}`); err != nil {
		return err
	}
	if err := iso.ValidateMaxLength(string(v), 127); err != nil {
		return err
	}
	return nil
}
